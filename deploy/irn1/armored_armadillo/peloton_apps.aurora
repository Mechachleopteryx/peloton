include('../../template/peloton-template.aurora')

cluster = 'armored_armadillo'
mesos_zk_path = 'zk://' + ','.join([
    'zk-125c58ff.pit-irn-1.uberatc.net:2181',
    'zk-c0d7569d.pit-irn-1.uberatc.net:2181',
    'zk-ea34a2c6.pit-irn-1.uberatc.net:2181'
]) + '/mesos/armored_armadillo'
# TODO: figure out why comma doesn't get parsed correctly though it's supposed to be supported
election_zk_servers = '\n'.join([
    'zk-125c58ff.pit-irn-1.uberatc.net:2181',
    'zk-c0d7569d.pit-irn-1.uberatc.net:2181',
    'zk-ea34a2c6.pit-irn-1.uberatc.net:2181',
])
docker_image = 'docker.int.uberatc.com/uber-usi/infra/peloton:0.1.0-183-g605141f'
mysql_host = 'ms-0d1a494c'
# TODO: remove the host pin once peloton is hooked up with uns
resmgr_host = 'ms-eb90b179'
hostmgr_host = 'ms-9baf6789'
jobmgr_host = 'ms-56ad1385'
placement_host = 'ms-e0d3105d'
cassandra_hosts = '\n'.join([
                  'ms-7ab279a1.pit-irn-1.uberatc.net',
                  'ms-3162c292.pit-irn-1.uberatc.net',
                  'ms-82ef95a4.pit-irn-1.uberatc.net',
                  'ms-46d5ed57.pit-irn-1.uberatc.net',
                  'ms-a8975ddc.pit-irn-1.uberatc.net',
                  ])
use_cassandra = 'true'

PROFILES = [
  Profile(
    cluster = cluster,
    app_id = 'resmgr',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    mysql_host = mysql_host,
    docker_image = docker_image,
    pinned_attribute = 'hostname',
    pinned_hosts = resmgr_host,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
  ),
  Profile(
    cluster = cluster,
    app_id = 'hostmgr',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    mysql_host = mysql_host,
    docker_image = docker_image,
    pinned_attribute = 'hostname',
    pinned_hosts = hostmgr_host,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
  ),
  Profile(
    cluster = cluster,
    app_id = 'jobmgr',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    mysql_host = mysql_host,
    docker_image = docker_image,
    pinned_attribute = 'hostname',
    pinned_hosts = jobmgr_host,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
    mesos_agent_work_dir = '/var/lib/mesos/agent',
  ),
  Profile(
    cluster = cluster,
    app_id = 'placement',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    mysql_host = mysql_host,
    docker_image = docker_image,
    pinned_attribute = 'hostname',
    pinned_hosts = placement_host,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
  )
]

jobs = [
  JOB_TEMPLATE.bind(profile = p) for p in PROFILES
]
