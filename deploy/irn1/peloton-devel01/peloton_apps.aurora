include('../../template/peloton-template.aurora')

cluster = 'peloton_devel01'
mesos_zk_path = 'zk://' + ','.join([
    'zookeeper-peloton-devel01.pit-irn-1.uberatc.net:2181',
]) + '/mesos/peloton_devel01'
election_zk_servers = 'zookeeper-peloton-devel01.pit-irn-1.uberatc.net:2181'
docker_image = 'docker.int.uberatc.com/uber-usi/infra/peloton:0.1.0-225-gaf2dafd'
mysql_host = 'ms-a208556d'

# TODO: remove the host pin once peloton is hooked up with uns
# Use colins to find host :  collins query -p peloton_devel01 -c tag,hostname,MESOS_ROLE|grep aurora
resmgr_host = 'ms-f00feccc'
hostmgr_host = 'ms-72ab5538'
jobmgr_host = 'ms-046f74b9'
placement_host = 'ms-a208556d'
cassandra_hosts = '\n'.join([
                  'ms-7ab279a1.pit-irn-1.uberatc.net',
                  'ms-3162c292.pit-irn-1.uberatc.net',
                  'ms-82ef95a4.pit-irn-1.uberatc.net',
                  'ms-46d5ed57.pit-irn-1.uberatc.net',
                  'ms-a8975ddc.pit-irn-1.uberatc.net',
                  ])
use_cassandra = 'true'
cassandra_store = cluster

PROFILES = [
  Profile(
    cluster = cluster,
    app_id = 'resmgr',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    mysql_host = mysql_host,
    docker_image = docker_image,
    pinned_attribute = 'hostname',
    pinned_hosts = resmgr_host,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
    cassandra_store = cassandra_store,
  ),
  Profile(
    cluster = cluster,
    app_id = 'hostmgr',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    mysql_host = mysql_host,
    docker_image = docker_image,
    pinned_attribute = 'hostname',
    pinned_hosts = hostmgr_host,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
    cassandra_store = cassandra_store,
  ),
  Profile(
    cluster = cluster,
    app_id = 'jobmgr',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    mysql_host = mysql_host,
    docker_image = docker_image,
    pinned_attribute = 'hostname',
    pinned_hosts = jobmgr_host,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
    cassandra_store = cassandra_store,
  ),
  Profile(
    cluster = cluster,
    app_id = 'placement',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    mysql_host = mysql_host,
    docker_image = docker_image,
    pinned_attribute = 'hostname',
    pinned_hosts = placement_host,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
    cassandra_store = cassandra_store,
  )
]

jobs = [
  JOB_TEMPLATE.bind(profile = p) for p in PROFILES
]
