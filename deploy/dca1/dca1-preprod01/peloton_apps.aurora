include('../../template/peloton-template.aurora')

cluster = 'dca1-preprod01'
election_zk_servers = 'zookeeper-mesos-preprod01-dca1.uber.internal:2181'
mesos_zk_path = 'zk://%s/mesos' % election_zk_servers
docker_image = 'docker-registry01-sjc1:5055/uber-usi/infra/peloton:0.2.3-52-gdc8788d'

cassandra_hosts = '\n'.join([
                  'compute77-dca1',
                  ])
use_cassandra = 'true'
cassandra_store = cluster.replace('-', '_')

PROFILES = [
  Profile(
    cluster = cluster,
    app_id = 'resmgr',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    docker_image = docker_image,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
    cassandra_store = cassandra_store,
  ),
  Profile(
    cluster = cluster,
    app_id = 'hostmgr',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    docker_image = docker_image,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
    cassandra_store = cassandra_store,
  ),
  Profile(
    cluster = cluster,
    app_id = 'jobmgr',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    docker_image = docker_image,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
    cassandra_store = cassandra_store,
    mesos_agent_work_dir = '/var/lib/mesos',
  ),
  Profile(
    cluster = cluster,
    app_id = 'placement',
    instances = 1,
    mesos_zk_path = mesos_zk_path,
    election_zk_servers = election_zk_servers,
    docker_image = docker_image,
    use_cassandra = use_cassandra,
    cassandra_hosts = cassandra_hosts,
    cassandra_store = cassandra_store,
  )
]

jobs = [
  JOB_TEMPLATE.bind(profile = p) for p in PROFILES
]
