// Code generated by MockGen. DO NOT EDIT.
// Source: code.uber.internal/infra/peloton/.gen/peloton/private/hostmgr/hostsvc (interfaces: InternalHostServiceYARPCClient)

package mocks

import (
	context "context"
	reflect "reflect"

	hostsvc "code.uber.internal/infra/peloton/.gen/peloton/private/hostmgr/hostsvc"
	gomock "github.com/golang/mock/gomock"
	yarpc "go.uber.org/yarpc"
)

// MockInternalHostServiceYARPCClient is a mock of InternalHostServiceYARPCClient interface
type MockInternalHostServiceYARPCClient struct {
	ctrl     *gomock.Controller
	recorder *MockInternalHostServiceYARPCClientMockRecorder
}

// MockInternalHostServiceYARPCClientMockRecorder is the mock recorder for MockInternalHostServiceYARPCClient
type MockInternalHostServiceYARPCClientMockRecorder struct {
	mock *MockInternalHostServiceYARPCClient
}

// NewMockInternalHostServiceYARPCClient creates a new mock instance
func NewMockInternalHostServiceYARPCClient(ctrl *gomock.Controller) *MockInternalHostServiceYARPCClient {
	mock := &MockInternalHostServiceYARPCClient{ctrl: ctrl}
	mock.recorder = &MockInternalHostServiceYARPCClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (_m *MockInternalHostServiceYARPCClient) EXPECT() *MockInternalHostServiceYARPCClientMockRecorder {
	return _m.recorder
}

// AcquireHostOffers mocks base method
func (_m *MockInternalHostServiceYARPCClient) AcquireHostOffers(_param0 context.Context, _param1 *hostsvc.AcquireHostOffersRequest, _param2 ...yarpc.CallOption) (*hostsvc.AcquireHostOffersResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "AcquireHostOffers", _s...)
	ret0, _ := ret[0].(*hostsvc.AcquireHostOffersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AcquireHostOffers indicates an expected call of AcquireHostOffers
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) AcquireHostOffers(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "AcquireHostOffers", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).AcquireHostOffers), _s...)
}

// ClusterCapacity mocks base method
func (_m *MockInternalHostServiceYARPCClient) ClusterCapacity(_param0 context.Context, _param1 *hostsvc.ClusterCapacityRequest, _param2 ...yarpc.CallOption) (*hostsvc.ClusterCapacityResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "ClusterCapacity", _s...)
	ret0, _ := ret[0].(*hostsvc.ClusterCapacityResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ClusterCapacity indicates an expected call of ClusterCapacity
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) ClusterCapacity(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ClusterCapacity", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).ClusterCapacity), _s...)
}

// CreateVolumes mocks base method
func (_m *MockInternalHostServiceYARPCClient) CreateVolumes(_param0 context.Context, _param1 *hostsvc.CreateVolumesRequest, _param2 ...yarpc.CallOption) (*hostsvc.CreateVolumesResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "CreateVolumes", _s...)
	ret0, _ := ret[0].(*hostsvc.CreateVolumesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateVolumes indicates an expected call of CreateVolumes
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) CreateVolumes(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "CreateVolumes", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).CreateVolumes), _s...)
}

// DestroyVolumes mocks base method
func (_m *MockInternalHostServiceYARPCClient) DestroyVolumes(_param0 context.Context, _param1 *hostsvc.DestroyVolumesRequest, _param2 ...yarpc.CallOption) (*hostsvc.DestroyVolumesResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "DestroyVolumes", _s...)
	ret0, _ := ret[0].(*hostsvc.DestroyVolumesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DestroyVolumes indicates an expected call of DestroyVolumes
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) DestroyVolumes(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "DestroyVolumes", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).DestroyVolumes), _s...)
}

// KillTasks mocks base method
func (_m *MockInternalHostServiceYARPCClient) KillTasks(_param0 context.Context, _param1 *hostsvc.KillTasksRequest, _param2 ...yarpc.CallOption) (*hostsvc.KillTasksResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "KillTasks", _s...)
	ret0, _ := ret[0].(*hostsvc.KillTasksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// KillTasks indicates an expected call of KillTasks
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) KillTasks(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "KillTasks", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).KillTasks), _s...)
}

// LaunchTasks mocks base method
func (_m *MockInternalHostServiceYARPCClient) LaunchTasks(_param0 context.Context, _param1 *hostsvc.LaunchTasksRequest, _param2 ...yarpc.CallOption) (*hostsvc.LaunchTasksResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "LaunchTasks", _s...)
	ret0, _ := ret[0].(*hostsvc.LaunchTasksResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LaunchTasks indicates an expected call of LaunchTasks
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) LaunchTasks(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "LaunchTasks", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).LaunchTasks), _s...)
}

// OfferOperations mocks base method
func (_m *MockInternalHostServiceYARPCClient) OfferOperations(_param0 context.Context, _param1 *hostsvc.OfferOperationsRequest, _param2 ...yarpc.CallOption) (*hostsvc.OfferOperationsResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "OfferOperations", _s...)
	ret0, _ := ret[0].(*hostsvc.OfferOperationsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// OfferOperations indicates an expected call of OfferOperations
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) OfferOperations(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "OfferOperations", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).OfferOperations), _s...)
}

// ReleaseHostOffers mocks base method
func (_m *MockInternalHostServiceYARPCClient) ReleaseHostOffers(_param0 context.Context, _param1 *hostsvc.ReleaseHostOffersRequest, _param2 ...yarpc.CallOption) (*hostsvc.ReleaseHostOffersResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "ReleaseHostOffers", _s...)
	ret0, _ := ret[0].(*hostsvc.ReleaseHostOffersResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReleaseHostOffers indicates an expected call of ReleaseHostOffers
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) ReleaseHostOffers(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ReleaseHostOffers", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).ReleaseHostOffers), _s...)
}

// ReserveResources mocks base method
func (_m *MockInternalHostServiceYARPCClient) ReserveResources(_param0 context.Context, _param1 *hostsvc.ReserveResourcesRequest, _param2 ...yarpc.CallOption) (*hostsvc.ReserveResourcesResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "ReserveResources", _s...)
	ret0, _ := ret[0].(*hostsvc.ReserveResourcesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ReserveResources indicates an expected call of ReserveResources
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) ReserveResources(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "ReserveResources", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).ReserveResources), _s...)
}

// UnreserveResources mocks base method
func (_m *MockInternalHostServiceYARPCClient) UnreserveResources(_param0 context.Context, _param1 *hostsvc.UnreserveResourcesRequest, _param2 ...yarpc.CallOption) (*hostsvc.UnreserveResourcesResponse, error) {
	_s := []interface{}{_param0, _param1}
	for _, _x := range _param2 {
		_s = append(_s, _x)
	}
	ret := _m.ctrl.Call(_m, "UnreserveResources", _s...)
	ret0, _ := ret[0].(*hostsvc.UnreserveResourcesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UnreserveResources indicates an expected call of UnreserveResources
func (_mr *MockInternalHostServiceYARPCClientMockRecorder) UnreserveResources(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	_s := append([]interface{}{arg0, arg1}, arg2...)
	return _mr.mock.ctrl.RecordCallWithMethodType(_mr.mock, "UnreserveResources", reflect.TypeOf((*MockInternalHostServiceYARPCClient)(nil).UnreserveResources), _s...)
}
