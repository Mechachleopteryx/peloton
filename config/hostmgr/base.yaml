storage:
  mysql:
    user: peloton
    password: peloton
    database: peloton
    host: 127.0.0.1
    port: 8193
    migrations: storage/mysql/migrations/
    # max_batch_size_rows controls how many tasks are created/updated in 1
    # insert statement. Increasing this will improve startup times for high task
    # count jobs. WARNING: tuning this up beyond the threshold of MYSQL_PACKET_SIZE
    # may result in failed task creations
    max_batch_size_rows: 500
    conn_lifetime: 30s
  cassandra:
    # FIXME: need to increase batch size limit dynamically in cassandra (T968823)
    max_batch_size_rows: 1
    max_parallel_batches: 1000
    connection:
      contactPoints: ["127.0.0.1"]
      port: 9042
      consistency: LOCAL_QUORUM
      # Need to increase timeout from 10s to 20s to avoid recovery code from timing out
      # We saw recovery code timing out when peloton was recovering from a
      # Cassandra latency spike issue.
      timeout: 20s
    store_name: peloton_test
    migrations: storage/cassandra/migrations/
  use_cassandra: true
  auto_migrate: true

host_manager:
  http_port: 5291
  grpc_port: 5391
  offer_hold_time_sec: 1800
  offer_pruning_period_sec: 3600
  taskupdate_ack_concurrency: 10
  taskupdate_buffer_size: 100000
  task_reconciler:
    initial_reconcile_delay_sec: 60
    reconcile_interval_sec: 1800
    explicit_reconcile_batch_interval_sec: 5
    explicit_reconcile_batch_size: 1000
  hostmap_refresh_interval: 10s
  host_pruning_period_sec: 600s
  hostmgr_backoff_retry_count: 3
  hostmgr_backoff_retry_interval_sec: 15

mesos:
  encoding: "x-protobuf"
  framework:
    gpu_supported: true
    task_killing_state: false
    partition_aware: false
    revocable_resources: false
    user: "root"
    name: "Peloton"
    # TODO : add roles for other components
    role: "peloton"
    principal: "peloton"
    # ~100 weeks to failover
    failover_timeout: 60000000

election:
  root: "/peloton"

health:
  heartbeat_interval: 5s
